C251 COMPILER V5.60.0,  UI                                                                 21/06/24  14:37:54  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE UI
OBJECT MODULE PLACED IN .\Out_File\UI.obj
COMPILER INVOKED BY: D:\keil5\keil5_MDK\keil5_MDK_32\C251\BIN\C251.EXE ..\CODE\UI.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE 
                    -INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\
                    -inc;..\USER\src) DEBUG PRINT(.\Out_File\UI.lst) OBJECT(.\Out_File\UI.obj) 

stmt  level    source

    1          #include "ui.h"
    2          #include <string.h>
    3          #include <stdio.h>
    4          #include "common.h"
    5          #include "headfile.h"
    6          #include "ADC.h"
    7          #include "Motor.h"
    8          #include "Element.h"
    9          #include "MPU6050.h"
   10          
   11          extern short gx,gy,gz;
   12          extern float Ratio;
   13          extern float Flag_Out_L;
   14          extern float Flag_Out_R;
   15          extern volatile float Exp_Speed;
   16          extern float Dis_Process;
   17          uint8 page=0;
   18          float value[4][7];
   19          char value_name[4][7][7];
   20          
   21          
   22          void value_name_init(void)//将name改为想要的参数名，但“ ”中的总长度不要变
   23          {
   24   1              //page=0
   25   1              strcpy(value_name[0][0],"ADC0_1"); //NAME_1表示显示的是第一页
   26   1              strcpy(value_name[0][1],"ADC1  ");
   27   1              strcpy(value_name[0][2],"ADC2  ");
   28   1              strcpy(value_name[0][3],"ADC3  ");
   29   1      
   30   1      
   31   1              //page=1        
   32   1              strcpy(value_name[1][0],"ADC4_2");
   33   1              strcpy(value_name[1][1],"Ratio ");
   34   1              strcpy(value_name[1][2],"Dis_Pr");
   35   1              strcpy(value_name[1][3],"Pitch ");
   36   1      
   37   1              
   38   1              //page=2
   39   1              strcpy(value_name[2][0],"Tur_Kp");
   40   1              strcpy(value_name[2][1],"Tur_Ki");
   41   1              strcpy(value_name[2][2],"Tur_Kd");
   42   1              strcpy(value_name[2][3],"Gyro_y");
   43   1              
   44   1              //page=3
   45   1              strcpy(value_name[3][0],"Exp_Sp");
   46   1              strcpy(value_name[3][1],"Dis1  ");
   47   1              strcpy(value_name[3][2],"Dis2  ");
   48   1              strcpy(value_name[3][3],"An_Sum");
   49   1      
   50   1      }
   51          
   52          void refresh_value()//value=填入变量名
   53          {
   54   1              //page=0
   55   1          value[0][0]= ADC_proc[0];
   56   1              value[0][1]= ADC_proc[1];
   57   1              value[0][2]= ADC_proc[3];
C251 COMPILER V5.60.0,  UI                                                                 21/06/24  14:37:54  PAGE 2   

   58   1              value[0][3]= ADC_proc[4];
   59   1              
   60   1              //page=1
   61   1              value[1][0]= ADC_proc[2];
   62   1              value[1][1]= Ratio;
   63   1              value[1][2]= Dis_Process;
   64   1              value[1][3]= Pitch;
   65   1              
   66   1              //page=2
   67   1              value[2][0]= Left_Wheel.Kp;
   68   1              value[2][1]= Left_Wheel.Ki;
   69   1              value[2][2]= Left_Wheel.Kd;
   70   1              value[2][3]= gy;
   71   1              
   72   1              //page=3
   73   1              value[3][0]= Exp_Speed;
   74   1              value[3][1]= Flag_Out_L;
   75   1              value[3][2]= Flag_Out_R;
   76   1              value[3][3]= 0.0;
   77   1                      
   78   1      }
   79          //                         oled显示函数
   80          ///////////////////////////////////////////////////////////////////////
   81          
   82          void oled_change_value(int pages,int y,float value_new)
   83          {
   84   1          value[pages][y]=value_new;
   85   1          oled_printf_float(55,y,value[pages][y],4,4);
   86   1      }
   87          
   88          void oled_all_static_state()  //静态显示部分
   89          {
   90   1          uint8 i,j;
   91   1      //    oled_p8x16str(0, 0,"page");
   92   1      //    oled_p8x16str(40, 0,"=");
   93   1      //    oled_int16(60,0,Mode_Num);
   94   1      
   95   1      //    oled_p8x16str(70, 0,"mode");
   96   1      //    oled_int16(120, 0,page);
   97   1              for(j=0;j<=3;j++)
   98   1              {
   99   2                      i = j*2;
  100   2                      oled_p8x16str(0 ,i,value_name[page][j]);
  101   2                      oled_p8x16str(50,i,"=");
  102   2              }
  103   1      }
  104          
  105          
  106          void oled_show(void)
  107          {
  108   1          uint8 i,j;
  109   1              refresh_value();
  110   1              for(j=0;j<=3;j++)
  111   1              {
  112   2                      i = j*2;
  113   2                      oled_printf_float(55,i,value[page][j],5,2);
  114   2              }
  115   1      }
  116          
  117          //////////////////////////////////////////////////////////////
  118          void ui_init(void)
  119          {
  120   1              oled_init();
  121   1              value_name_init();
  122   1              oled_all_static_state();
  123   1      }
C251 COMPILER V5.60.0,  UI                                                                 21/06/24  14:37:54  PAGE 3   

  124          
  125          void ui_show(void)
  126          {
  127   1              refresh_value();
  128   1              oled_show();
  129   1      }
  130          
  131          
  132          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       559     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       309     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       119     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
