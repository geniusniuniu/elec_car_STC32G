C251 COMPILER V5.60.0,  UI                                                                 20/07/24  16:31:31  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE UI
OBJECT MODULE PLACED IN .\Out_File\UI.obj
COMPILER INVOKED BY: D:\keil5\keil5_MDK\keil5_MDK_32\C251\BIN\C251.EXE ..\CODE\UI.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE 
                    -INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\
                    -inc;..\USER\src) DEBUG PRINT(.\Out_File\UI.lst) OBJECT(.\Out_File\UI.obj) 

stmt  level    source

    1          #include "ui.h"
    2          #include <string.h>
    3          #include <stdio.h>
    4          #include "common.h"
    5          #include "headfile.h"
    6          #include "ADC.h"
    7          #include "Motor.h"
    8          #include "Element.h"
    9          #include "MPU6050.h"
   10          
   11          extern short gx,gy,gz;
   12          extern float Ratio;
   13          extern float Flag_Out_L;
   14          extern float Flag_Out_R;
   15          extern volatile float Exp_Speed;
   16          extern float Dis_Process;
   17          extern float Adjust_Val;
   18          char page=0;
   19          float value[4][7];
   20          char value_name[4][7][7];
   21          
   22          
   23          void value_name_init(void)//将name改为想要的参数名，但“ ”中的总长度不要变
   24          {
   25   1              //page=0
   26   1              strcpy(value_name[0][0],"Key_Vl"); //NAME_1表示显示的是第一页
   27   1              strcpy(value_name[0][1],"ADC0  ");
   28   1              strcpy(value_name[0][2],"ADC1  ");
   29   1              strcpy(value_name[0][3],"ADC2  ");
   30   1      
   31   1      
   32   1              //page=1        
   33   1              strcpy(value_name[1][0],"ADC3  ");
   34   1              strcpy(value_name[1][1],"ADC4  ");
   35   1              strcpy(value_name[1][2],"Ratio ");
   36   1              strcpy(value_name[1][3],"Dis_Pr");
   37   1      
   38   1              
   39   1              //page=2
   40   1              strcpy(value_name[2][0],"Trn_Kp");
   41   1              strcpy(value_name[2][1],"Trn_Ki");
   42   1              strcpy(value_name[2][2],"Trn_Kd");
   43   1              strcpy(value_name[2][3],"Pitch");
   44   1              
   45   1              //page=3
   46   1              strcpy(value_name[3][0],"Exp_Sp");
   47   1              strcpy(value_name[3][1],"Gyro_z");
   48   1              strcpy(value_name[3][2],"Dis2  ");
   49   1              strcpy(value_name[3][3],"An_Sum");
   50   1      
   51   1      }
   52          
   53          void refresh_value()//value=填入变量名
   54          {
   55   1              //page=0
   56   1          if(page == 0)
   57   1          {
C251 COMPILER V5.60.0,  UI                                                                 20/07/24  16:31:31  PAGE 2   

   58   2              value[0][0]= Adjust_Val;
   59   2              value[0][1]= ADC_proc[0];
   60   2              value[0][2]= ADC_proc[1];
   61   2              value[0][3]= ADC_proc[2];
   62   2          }
   63   1              else if(page == 1)
   64   1          {
   65   2              //page=1
   66   2              value[1][0]= ADC_proc[3];
   67   2              value[1][1]= ADC_proc[4];
   68   2              value[1][2]= Ratio;
   69   2              value[1][3]= Dis_Process;
   70   2          }
   71   1              else if(page == 2)
   72   1          {
   73   2              //page=2
   74   2              value[2][0]= Left_Wheel.Kp;
   75   2              value[2][1]= Left_Wheel.Ki;
   76   2              value[2][2]= Left_Wheel.Kd;
   77   2              value[2][3]= Pitch;
   78   2              }
   79   1          else if(page == 3)
   80   1          {
   81   2              //page=3
   82   2              value[3][0]= Exp_Speed;
   83   2              value[3][1]= gz;
   84   2              value[3][2]= Flag_Out_R;
   85   2              value[3][3]= 0.0;
   86   2          }   
   87   1      }
   88          //                         oled显示函数
   89          ///////////////////////////////////////////////////////////////////////
   90          
   91          void oled_change_value(int pages,int y,float value_new)
   92          {
   93   1          value[pages][y]=value_new;
   94   1          oled_printf_float(55,y,value[pages][y],4,4);
   95   1      }
   96          
   97          void oled_all_static_state()  //静态显示部分
   98          {
   99   1          uint8 i,j;
  100   1      //    oled_p8x16str(0, 0,"page");
  101   1      //    oled_p8x16str(40, 0,"=");
  102   1      //    oled_int16(60,0,Mode_Num);
  103   1      
  104   1      //    oled_p8x16str(70, 0,"mode");
  105   1      //    oled_int16(120, 0,page);
  106   1              for(j=0;j<=3;j++)
  107   1              {
  108   2                      i = j*2;
  109   2                      oled_p8x16str(0 ,i,value_name[page][j]);
  110   2                      oled_p8x16str(50,i,"=");
  111   2              }
  112   1      }
  113          
  114          
  115          void oled_show(void)
  116          {
  117   1          uint8 i,j;
  118   1              refresh_value();
  119   1              for(j=0;j<=3;j++)
  120   1              {
  121   2                      i = j*2;
  122   2                      oled_printf_float(55,i,value[page][j],5,2);
  123   2              }
C251 COMPILER V5.60.0,  UI                                                                 20/07/24  16:31:31  PAGE 3   

  124   1      }
  125          
  126          //////////////////////////////////////////////////////////////
  127          void ui_init(void)
  128          {
  129   1              oled_init();
  130   1              value_name_init();
  131   1              oled_all_static_state();
  132   1      }
  133          
  134          void ui_show(void)
  135          {
  136   1              refresh_value();
  137   1              oled_show();
  138   1      }
  139          
  140          
  141          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       583     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       309     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       118     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
